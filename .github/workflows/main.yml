name: Test installers
on:
  pull_request:
  workflow_dispatch:

jobs:
  test-installers:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        image:
          - "centos:8"
          - "fedora:34"
          - "debian:bullseye"
          - "ubuntu:focal"
          - "dyne/devuan:chimaera"
          - "packpack/packpack:redos-7.3"
        type: [ "pre-release", "release" ]
        version: ["1.10", "2"]
        build-type: [ "", "gc64" ]
        exclude:
          - type: "pre-release"
            version: "1.10"
          - version: "1.10"
            build-type: "gc64"
          - version: "1.10"
            image: "packpack/packpack:redos-7.3"

        include:
          # At the moment of writting there is only 2.11.1 release
          # with packages for Debian Bookworm.
          - image: "debian:bookworm"
            type: "release"
            version: "2"
            build-type: ""
          - image: "debian:bookworm"
            type: "release"
            version: "2"
            build-type: "gc64"
          - image: "dyne/devuan:daedalus"
            type: "release"
            version: "2"
            build-type: ""
          - image: "dyne/devuan:daedalus"
            type: "release"
            version: "2"
            build-type: "gc64"
          # At the moment of writting there is only 2.11.1 release
          # with packages for Fedora 37 and Fedora 38.
          - image: "fedora:37"
            type: "release"
            version: "2"
            build-type: ""
          - image: "fedora:37"
            type: "release"
            version: "2"
            build-type: "gc64"
          - image: "fedora:38"
            type: "release"
            version: "2"
            build-type: ""
          - image: "fedora:38"
            type: "release"
            version: "2"
            build-type: "gc64"
          - image: "packpack/packpack:redos-7.3"
            type: "release"
            version: "2"
            build-type: ""
          - image: "packpack/packpack:redos-7.3"
            type: "release"
            version: "2"
            build-type: "gc64"

    env:
      INSTALLER: installer.sh

    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Python environment
      uses: actions/setup-python@v2

    - name: Setup Python requirements
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create Installer
      run: ./mkinstaller.py ${{ matrix.type }} ${{ matrix.version }}

    - name: Workaround for Centos 8
      if: matrix.image == 'centos:8'
      run: |
        cat > installer_centos_8.sh << EOL
        #!/usr/bin/env bash
        find /etc/yum.repos.d/ -type f -exec sed -i 's/mirrorlist=/#mirrorlist=/g' {} +
        find /etc/yum.repos.d/ -type f -exec sed -i 's/#baseurl=/baseurl=/g' {} +
        find /etc/yum.repos.d/ -type f -exec sed -i 's/mirror.centos.org/vault.centos.org/g' {} +
        source /app/installer.sh
        EOL
        chmod +x installer_centos_8.sh
        echo "INSTALLER=installer_centos_8.sh" >> $GITHUB_ENV

    - name: Set up Tarantool in docker
      env:
        GC64: ${{ matrix.build-type == 'gc64' }}
      run: docker run --rm -v $(pwd):/app -e GC64=${GC64} -e FORCE_INSTALL_TARANTOOL=True ${{ matrix.image }} sh -c "bash /app/${{ env.INSTALLER }}; tarantool --version; echo -n 'GC64 is '; tarantool -e 'print(require\"ffi\".abi\"gc64\")'"
